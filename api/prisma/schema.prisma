// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../database/dev/db"
}

model Video {
  id           String         @id @default(uuid())
  name         String
  path         String
  transcript   String?
  createdAt    DateTime       @default(now())
  VideoHistory Videohistory[]
}

model Audio {
  id           String         @id @default(uuid())
  name         String
  path         String
  transcript   String?
  createdAt    DateTime       @default(now())
  AudioHistory Audiohistory[]
}

model Audiohistory {
  id         String    @id @default(uuid())
  userId     String
  audioId    String
  audio      Audio     @relation(fields: [audioId], references: [id])
  promptText String?
  resultText String?
  createdAt  DateTime  @default(now())
  messages   Message[]
}

model Prompt {
  id       String @id @default(uuid())
  title    String
  template String
  type     String @default("video")
}

model Videohistory {
  id         String    @id @default(uuid())
  userId     String
  videoId    String
  video      Video     @relation(fields: [videoId], references: [id])
  promptText String?
  resultText String?
  createdAt  DateTime  @default(now())
  messages   Message[]
}

model Website {
  url            String           @id
  title          String?
  image          String?
  content        String?
  createdAt      DateTime         @default(now())
  Websitehistory Websitehistory[]
}

model Article {
  id             String           @id @default(uuid())
  name           String
  path           String
  transcript     String?
  createdAt      DateTime         @default(now())
  Articlehistory Articlehistory[]
}

model Articlehistory {
  id         String    @id @default(uuid())
  userId     String
  articleId  String
  article    Article   @relation(fields: [articleId], references: [id])
  promptText String?
  resultText String?
  createdAt  DateTime  @default(now())
  messages   Message[]
}

model Message {
  id               String          @id @default(uuid())
  userId           String
  promptText       String?
  resultText       String?
  createdAt        DateTime        @default(now())
  Articlehistory   Articlehistory? @relation(fields: [articlehistoryId], references: [id])
  articlehistoryId String?
  Websitehistory   Websitehistory? @relation(fields: [websitehistoryId], references: [id])
  websitehistoryId String?
  Videohistory     Videohistory?   @relation(fields: [videohistoryId], references: [id])
  videohistoryId   String?
  Audiohistory     Audiohistory?   @relation(fields: [audiohistoryId], references: [id])
  audiohistoryId   String?
}

model Websitehistory {
  id         String    @id @default(uuid())
  userId     String
  websiteUrl String
  website    Website   @relation(fields: [websiteUrl], references: [url])
  promptText String?
  resultText String?
  createdAt  DateTime  @default(now())
  messages   Message[]
}
